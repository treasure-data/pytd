name: Build
permissions:
  contents: read

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox
    - name: Run linting
      run: nox --session lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox
    - name: Run type checking
      run: nox --session typecheck

  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        include:
          # Core combinations - test key Python versions with supported pandas
          - os: ubuntu-latest
            python-version: "3.9"
            pandas-version: "2.1.4"
          - os: ubuntu-latest
            python-version: "3.11"
            pandas-version: "2.2.3"
          - os: ubuntu-latest
            python-version: "3.13"
            pandas-version: "2.2.3"

          # Windows compatibility check - minimal but important
          - os: windows-latest
            python-version: "3.11"
            pandas-version: "2.2.3"


    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[spark]
        pip check
        pip install nox
    - name: Run unit tests
      run: |
        nox --session "tests(python='${{ matrix.python-version }}', pandas='${{ matrix.pandas-version }}')"
      env:
        TD_API_KEY: 1/XXX
        TD_API_SERVER: https://api.treasure-data.com/

  dist-dry-run:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Build and check dist for PyPI (a.k.a dry run)
      run: |
        python -m build
        twine check dist/*
