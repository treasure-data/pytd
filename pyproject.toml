[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pytd"
version = "2.2.0"
description = "Treasure Data Driver for Python"
readme = "README.rst"
requires-python = ">=3.9"
license = "Apache-2.0"
authors = [
    {name = "Treasure Data", email = "support@treasure-data.com"}
]
maintainers = [
    {name = "Treasure Data", email = "support@treasure-data.com"}
]
keywords = ["database", "treasure-data"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "urllib3>=1.21.1",
    "trino>=0.334.0",
    "pandas>=2.1.0",
    "numpy>=1.25.2",
    "td-client>=1.5.0",
    "pytz>=2018.5",
    "tqdm>=4.60.0",
]

[project.optional-dependencies]
spark = [
    "td-pyspark>20.10.0",
    "pyspark>=3.0.0",
    "pyarrow>=10.0",
]
test = [
    "pytest",
]
doc = [
    "sphinx>=2.2.0",
    "sphinx_rtd_theme",
    "numpydoc",
    "ipython",
]
dev = [
    "pyright>=1.1.407",
]

[project.urls]
Homepage = "https://github.com/treasure-data/pytd"
Repository = "https://github.com/treasure-data/pytd"

[tool.setuptools.packages.find]
exclude = ["*tests*"]

[tool.ruff]
line-length = 88
target-version = "py39"
extend-exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "pytd/pandas_td/ipython.py",
    "doc/conf.py",
]

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "UP",
    "B",
]

[tool.ruff.lint.isort]
known-third-party = [
    "IPython",
    "msgpack",
    "nox",
    "numpy",
    "pandas",
    "pkg_resources",
    "trino",
    "pytz",
    "setuptools",
    "tdclient",
    "tqdm",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pyright]
typeCheckingMode = "basic"
pythonVersion = "3.9"
pythonPlatform = "All"

include = ["pytd"]
exclude = [
    "**/__pycache__",
    "**/node_modules",
    ".venv",
    "build",
    "dist",
    "pytd.egg-info",
    "pytd/tests/**",  # Exclude tests for now
    "pytd/pandas_td/ipython.py",  # IPython dependency not in core requirements
    "pytd/spark.py",  # Spark dependencies are optional
]

# Permissive settings for baseline - will tighten gradually
reportMissingImports = "warning"  # Downgrade to warning for optional dependencies
reportMissingTypeStubs = false
reportUnknownMemberType = false
reportUnknownArgumentType = false
reportUnknownVariableType = false
reportGeneralTypeIssues = false
reportAttributeAccessIssue = false
reportOptionalIterable = false
reportArgumentType = false
reportOptionalMemberAccess = false
reportOptionalSubscript = false

# Pre-commit venv configuration
venvPath = "."
venv = ".venv"
